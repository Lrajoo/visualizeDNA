{"ast":null,"code":"import _defineProperty from\"/Users/lingessrajoo/Desktop/Documents/Work/Ginkgo Bioworks/visualizeDNA/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/lingessrajoo/Desktop/Documents/Work/Ginkgo Bioworks/visualizeDNA/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lingessrajoo/Desktop/Documents/Work/Ginkgo Bioworks/visualizeDNA/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/lingessrajoo/Desktop/Documents/Work/Ginkgo Bioworks/visualizeDNA/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/lingessrajoo/Desktop/Documents/Work/Ginkgo Bioworks/visualizeDNA/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/lingessrajoo/Desktop/Documents/Work/Ginkgo Bioworks/visualizeDNA/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component}from'react';import Modal from'../../../Components/Modal/Modal';import Button from'../../../Components/Button/Button';import DNA from'../../../Components/DNA/DNA';import classes from'./ViewDNA.module.css';import Input from'../../../Components/Input/Input';import Summary from'../../../Components/Summary/Summary';var ViewDNA=/*#__PURE__*/function(_Component){_inherits(ViewDNA,_Component);function ViewDNA(){var _getPrototypeOf2;var _this;_classCallCheck(this,ViewDNA);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ViewDNA)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={search:{name:'Search',elementType:'input',elementConfig:{type:'text',placeholder:'Search Sequence Name'},value:''},sorted:false,show:false,sequence:[]};_this.inputChangedHandler=function(event){var search=_objectSpread({},_this.state.search);search.value=event.target.value;_this.setState({search:search});_this.setState({sorted:false});};_this.sortSequenceName=function(){function mySorter(a,b){var x=a.sequenceName.toLowerCase();var y=b.sequenceName.toLowerCase();return x<y?-1:x>y?1:0;}_this.props.DNA.sort(mySorter);_this.setState({sorted:true});};_this.showSequence=function(){_this.setState({show:true});};_this.hideSequence=function(){_this.setState({show:false});};return _this;}_createClass(ViewDNA,[{key:\"render\",value:function render(){var _this2=this;var controls=null;var listDNA=null;if(this.props.DNA.length>0){controls=React.createElement(\"div\",null,React.createElement(Button,{btnType:'Sort',clicked:this.sortSequenceName},\"Sort\"),React.createElement(Input,{invalid:false,touched:false,elementType:this.state.search.elementType,name:this.state.search.name,elementConfig:this.state.search.elementConfig,value:this.state.search.value,changed:function changed(event){return _this2.inputChangedHandler(event);}}));}if(this.props.DNA.length>0&&this.state.search.value===''||this.state.sorted){listDNA=React.createElement(\"div\",null,this.props.DNA.map(function(dna){return React.createElement(DNA,{id:dna,name:dna.sequenceName,description:dna.sequenceDescription,sequence:dna.sequenceDNA,show:_this2.showSequence,seq:_this2.state.sequence});}));}else if(this.state.search.value!==''){var searchArr=[];for(var key in this.props.DNA){var currName=this.props.DNA[key].sequenceName;var check=currName.includes(this.state.search.value);if(check){searchArr.push(key);}}listDNA=React.createElement(\"div\",null,searchArr.map(function(key){return React.createElement(DNA,{id:key,name:_this2.props.DNA[key].sequenceName,description:_this2.props.DNA[key].sequenceDescription,sequence:_this2.props.DNA[key].sequenceDNA,show:_this2.showSequence,seq:_this2.state.sequence});}));searchArr=[];}else{listDNA=React.createElement(\"h2\",null,\"No DNA samples have been added.\");}var summary=null;if(this.state.show){var lastSequence=this.state.sequence[this.state.sequence.length-1];summary=React.createElement(Summary,{seq:lastSequence});}return React.createElement(\"div\",{className:classes.View},controls,listDNA,React.createElement(Modal,{show:this.state.show,modalClosed:this.hideSequence},summary));}}]);return ViewDNA;}(Component);export default ViewDNA;","map":{"version":3,"sources":["/Users/lingessrajoo/Desktop/Documents/Work/Ginkgo Bioworks/visualizeDNA/src/Containers/Interface/ViewDNA/ViewDNA.js"],"names":["React","Component","Modal","Button","DNA","classes","Input","Summary","ViewDNA","state","search","name","elementType","elementConfig","type","placeholder","value","sorted","show","sequence","inputChangedHandler","event","target","setState","sortSequenceName","mySorter","a","b","x","sequenceName","toLowerCase","y","props","sort","showSequence","hideSequence","controls","listDNA","length","map","dna","sequenceDescription","sequenceDNA","searchArr","key","currName","check","includes","push","summary","lastSequence","View"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from '../../../Components/Modal/Modal';\nimport Button from '../../../Components/Button/Button';\nimport DNA from '../../../Components/DNA/DNA';\nimport classes from './ViewDNA.module.css';\nimport Input from '../../../Components/Input/Input';\nimport Summary from '../../../Components/Summary/Summary';\n\nclass ViewDNA extends Component {\n    state = {\n        search: {\n            name: 'Search',\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Search Sequence Name'\n            },\n            value: ''\n        },\n        sorted: false,\n        show: false,\n        sequence: []\n    }\n\n    inputChangedHandler = (event) => {\n        const search = {\n            ...this.state.search\n        };\n        search.value = event.target.value;\n        this.setState({search: search});\n        this.setState({sorted: false});\n    }\n\n    sortSequenceName = () => {\n        function mySorter(a, b) {\n            let x = a.sequenceName.toLowerCase();\n            let y = b.sequenceName.toLowerCase();\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        }\n        this.props.DNA.sort(mySorter);\n        this.setState({sorted: true});\n    }\n\n    showSequence = () => {\n        this.setState({show: true});\n    }\n\n    hideSequence = () => {\n        this.setState({show: false});\n    }\n\n\n    render(){\n        let controls = null;\n        let listDNA = null;\n        if(this.props.DNA.length > 0){\n            controls =(\n                <div>\n                    <Button btnType={'Sort'} clicked={this.sortSequenceName}>Sort</Button>\n                    <Input\n                        invalid={false}\n                        touched={false}\n                        elementType={this.state.search.elementType}\n                        name={this.state.search.name}\n                        elementConfig={this.state.search.elementConfig}\n                        value={this.state.search.value}\n                        changed={(event) => this.inputChangedHandler(event)}\n                    />\n                </div>\n            );\n        }\n        if((this.props.DNA.length > 0 && this.state.search.value === '') || this.state.sorted){\n   \n            listDNA = (\n                <div>\n                    {this.props.DNA.map(dna => {\n                        return <DNA \n                                    id={dna}\n                                    name={dna.sequenceName} \n                                    description={dna.sequenceDescription} \n                                    sequence={dna.sequenceDNA}\n                                    show={this.showSequence}\n                                    seq={this.state.sequence}\n                                />\n                    })}\n                </div>\n            );\n        }else if(this.state.search.value !== ''){\n            let searchArr = [];\n            for(let key in this.props.DNA){\n                let currName = this.props.DNA[key].sequenceName;\n                let check = currName.includes(this.state.search.value);\n                if(check){\n                   \n                    searchArr.push(key);\n                }\n            }\n            listDNA = (\n                <div>\n                    {searchArr.map(key => {\n                        return <DNA \n                                    id={key}\n                                    name={this.props.DNA[key].sequenceName} \n                                    description={this.props.DNA[key].sequenceDescription} \n                                    sequence={this.props.DNA[key].sequenceDNA}\n                                    show={this.showSequence}\n                                    seq={this.state.sequence}\n                                />\n                    })}\n                    \n                </div>\n            );\n            searchArr = [];\n            \n        }else{\n            listDNA = <h2>No DNA samples have been added.</h2>\n        }\n        let summary  = null;\n        if(this.state.show){\n            let lastSequence = this.state.sequence[this.state.sequence.length-1];\n\n            summary = (\n                <Summary seq={lastSequence}/>\n            );\n        }\n\n        return(\n            <div className={classes.View}>\n                {controls}\n                {listDNA}\n                <Modal show={this.state.show} modalClosed={this.hideSequence}>\n                    {summary}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ViewDNA;"]},"metadata":{},"sourceType":"module"}