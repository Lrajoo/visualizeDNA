{"ast":null,"code":"import React,{Component}from'react';import classes from'./Input.module.css';var input=function input(props){var inputElement=null;var inputClasses=[classes.InputElement];if(props.invalid&&props.touched){inputClasses.push(classes.Invalid);}switch(props.elementType){case'input':inputElement=React.createElement(\"input\",Object.assign({},props.elementConfig,{className:inputClasses.join(' '),value:props.value,onChange:props.changed}));break;case'textarea':inputElement=React.createElement(\"textarea\",Object.assign({},props.elementConfig,{className:inputClasses.join(' '),value:props.value,onChange:props.changed}));break;default:inputElement=React.createElement(\"input\",Object.assign({},props.elementConfig,{className:inputClasses.join(' '),value:props.value,onChange:props.changed}));}var validationError=null;if(props.invalid&&props.touched){validationError=React.createElement(\"p\",{className:classes.ErrMessage},\"Please enter a valid \",props.name);}return React.createElement(\"div\",{className:classes.Input},inputElement,validationError);};export default input;","map":{"version":3,"sources":["/Users/lingessrajoo/Desktop/Documents/Work/Ginkgo Bioworks/visualizeDNA/src/Components/Input/Input.js"],"names":["React","Component","classes","input","props","inputElement","inputClasses","InputElement","invalid","touched","push","Invalid","elementType","elementConfig","join","value","changed","validationError","ErrMessage","name","Input"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CAErB,GAAIC,CAAAA,YAAY,CAAG,IAAnB,CACA,GAAMC,CAAAA,YAAY,CAAG,CAACJ,OAAO,CAACK,YAAT,CAArB,CAEA,GAAGH,KAAK,CAACI,OAAN,EAAiBJ,KAAK,CAACK,OAA1B,CAAkC,CAC9BH,YAAY,CAACI,IAAb,CAAkBR,OAAO,CAACS,OAA1B,EACH,CAED,OAAOP,KAAK,CAACQ,WAAb,EACI,IAAK,OAAL,CACIP,YAAY,CAAG,6CACSD,KAAK,CAACS,aADf,EAEK,SAAS,CAAEP,YAAY,CAACQ,IAAb,CAAkB,GAAlB,CAFhB,CAGK,KAAK,CAAEV,KAAK,CAACW,KAHlB,CAIK,QAAQ,CAAEX,KAAK,CAACY,OAJrB,GAAf,CAMA,MACJ,IAAK,UAAL,CACIX,YAAY,CAAG,gDACSD,KAAK,CAACS,aADf,EAEK,SAAS,CAAEP,YAAY,CAACQ,IAAb,CAAkB,GAAlB,CAFhB,CAGK,KAAK,CAAEV,KAAK,CAACW,KAHlB,CAIK,QAAQ,CAAEX,KAAK,CAACY,OAJrB,GAAf,CAMA,MACJ,QACIX,YAAY,CAAG,6CACSD,KAAK,CAACS,aADf,EAEK,SAAS,CAAEP,YAAY,CAACQ,IAAb,CAAkB,GAAlB,CAFhB,CAGK,KAAK,CAAEV,KAAK,CAACW,KAHlB,CAIK,QAAQ,CAAEX,KAAK,CAACY,OAJrB,GAAf,CAlBR,CA2BA,GAAIC,CAAAA,eAAe,CAAG,IAAtB,CACA,GAAGb,KAAK,CAACI,OAAN,EAAiBJ,KAAK,CAACK,OAA1B,CAAkC,CAC9BQ,eAAe,CAAG,yBAAG,SAAS,CAAEf,OAAO,CAACgB,UAAtB,0BAAwDd,KAAK,CAACe,IAA9D,CAAlB,CACH,CAED,MACI,4BAAK,SAAS,CAAEjB,OAAO,CAACkB,KAAxB,EACKf,YADL,CAEKY,eAFL,CADJ,CAOH,CAhDD,CAkDA,cAAed,CAAAA,KAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.touched){\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch(props.elementType){\n        case('input'):\n            inputElement = <input \n                                {...props.elementConfig}\n                                className={inputClasses.join(' ')}\n                                value={props.value}\n                                onChange={props.changed}\n                            />;\n            break;\n        case('textarea'):\n            inputElement = <textarea \n                                {...props.elementConfig}\n                                className={inputClasses.join(' ')}\n                                value={props.value}\n                                onChange={props.changed}\n                            />;\n            break;\n        default:\n            inputElement = <input \n                                {...props.elementConfig}\n                                className={inputClasses.join(' ')}\n                                value={props.value}\n                                onChange={props.changed}\n                            />;\n            \n    }\n\n    let validationError = null;\n    if(props.invalid && props.touched){\n        validationError = <p className={classes.ErrMessage}>Please enter a valid {props.name}</p>\n    }\n\n    return (\n        <div className={classes.Input}>\n            {inputElement}\n            {validationError}\n        </div>\n    );\n\n};\n\nexport default input;"]},"metadata":{},"sourceType":"module"}