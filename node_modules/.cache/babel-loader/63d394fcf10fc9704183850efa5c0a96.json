{"ast":null,"code":"var _jsxFileName = \"/Users/lingessrajoo/Desktop/GinkgoBioworks/visualizeDNA/visual-dna/src/Components/Input/Input.js\";\nimport React, { Component } from 'react';\nimport classes from './Input.module.css';\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({}, props.elementConfig, {\n        className: inputClasses.join(' '),\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = React.createElement(\"textarea\", Object.assign({}, props.elementConfig, {\n        className: inputClasses.join(' '),\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({}, props.elementConfig, {\n        className: inputClasses.join(' '),\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n  }\n\n  let validationError = null;\n\n  if (props.invalid && props.touched) {\n    validationError = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Please enter a valid value\");\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, inputElement, validationError);\n};\n\nexport default input;","map":{"version":3,"sources":["/Users/lingessrajoo/Desktop/GinkgoBioworks/visualizeDNA/visual-dna/src/Components/Input/Input.js"],"names":["React","Component","classes","input","props","inputElement","inputClasses","InputElement","invalid","touched","push","Invalid","elementType","elementConfig","join","value","changed","validationError","Input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,YAAY,GAAG,CAACJ,OAAO,CAACK,YAAT,CAArB;;AAEA,MAAGH,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACK,OAA1B,EAAkC;AAC9BH,IAAAA,YAAY,CAACI,IAAb,CAAkBR,OAAO,CAACS,OAA1B;AACH;;AAED,UAAOP,KAAK,CAACQ,WAAb;AACI,SAAK,OAAL;AACIP,MAAAA,YAAY,GAAG,+CACSD,KAAK,CAACS,aADf;AAEK,QAAA,SAAS,EAAEP,YAAY,CAACQ,IAAb,CAAkB,GAAlB,CAFhB;AAGK,QAAA,KAAK,EAAEV,KAAK,CAACW,KAHlB;AAIK,QAAA,QAAQ,EAAEX,KAAK,CAACY,OAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAMA;;AACJ,SAAK,UAAL;AACIX,MAAAA,YAAY,GAAG,kDACSD,KAAK,CAACS,aADf;AAEK,QAAA,SAAS,EAAEP,YAAY,CAACQ,IAAb,CAAkB,GAAlB,CAFhB;AAGK,QAAA,KAAK,EAAEV,KAAK,CAACW,KAHlB;AAIK,QAAA,QAAQ,EAAEX,KAAK,CAACY,OAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAMA;;AACJ;AACIX,MAAAA,YAAY,GAAG,+CACSD,KAAK,CAACS,aADf;AAEK,QAAA,SAAS,EAAEP,YAAY,CAACQ,IAAb,CAAkB,GAAlB,CAFhB;AAGK,QAAA,KAAK,EAAEV,KAAK,CAACW,KAHlB;AAIK,QAAA,QAAQ,EAAEX,KAAK,CAACY,OAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAlBR;;AA2BA,MAAIC,eAAe,GAAG,IAAtB;;AACA,MAAGb,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACK,OAA1B,EAAkC;AAC9BQ,IAAAA,eAAe,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAlB;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACgB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,YADL,EAEKY,eAFL,CADJ;AAOH,CAhDD;;AAkDA,eAAed,KAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.touched){\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch(props.elementType){\n        case('input'):\n            inputElement = <input \n                                {...props.elementConfig}\n                                className={inputClasses.join(' ')}\n                                value={props.value}\n                                onChange={props.changed}\n                            />;\n            break;\n        case('textarea'):\n            inputElement = <textarea \n                                {...props.elementConfig}\n                                className={inputClasses.join(' ')}\n                                value={props.value}\n                                onChange={props.changed}\n                            />;\n            break;\n        default:\n            inputElement = <input \n                                {...props.elementConfig}\n                                className={inputClasses.join(' ')}\n                                value={props.value}\n                                onChange={props.changed}\n                            />;\n            \n    }\n\n    let validationError = null;\n    if(props.invalid && props.touched){\n        validationError = <p>Please enter a valid value</p>\n    }\n\n    return (\n        <div className={classes.Input}>\n            {inputElement}\n            {validationError}\n        </div>\n    );\n\n};\n\nexport default input;"]},"metadata":{},"sourceType":"module"}