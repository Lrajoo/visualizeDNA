{"ast":null,"code":"var _jsxFileName = \"/Users/lingessrajoo/Desktop/visualizeDNA/src/Containers/Interface/ViewDNA/ViewDNA.js\";\nimport React, { Component } from 'react';\nimport Modal from '../../../Components/Modal/Modal';\nimport Button from '../../../Components/Button/Button';\nimport DNA from '../../../Components/DNA/DNA';\nimport classes from './ViewDNA.module.css';\nimport Input from '../../../Components/Input/Input';\n\nclass ViewDNA extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: 'Search',\n      elementType: 'input',\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Sequence Name'\n      },\n      value: ''\n    };\n  }\n\n  render() {\n    let listDNA = null;\n\n    if (this.props.DNA.length > 0) {\n      listDNA = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnType: 'Sort',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Sort\"), React.createElement(\"input\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"name=\", this.state.name, \"elementType=\", this.state.elementType, \"elementConfig=\", this.state.elementConfig, \"value=\", this.state.value, \"Changed=\", event => this.inputChangedHandler(event)), this.props.DNA.map(dna => {\n        return React.createElement(DNA, {\n          name: dna.sequenceName,\n          description: dna.sequenceDescription,\n          sequence: dna.sequenceDNA,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }));\n    } else {\n      listDNA = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"No DNA samples have been added.\");\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.View,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, listDNA);\n  }\n\n}\n\nexport default ViewDNA;","map":{"version":3,"sources":["/Users/lingessrajoo/Desktop/visualizeDNA/src/Containers/Interface/ViewDNA/ViewDNA.js"],"names":["React","Component","Modal","Button","DNA","classes","Input","ViewDNA","state","name","elementType","elementConfig","type","placeholder","value","render","listDNA","props","length","event","inputChangedHandler","map","dna","sequenceName","sequenceDescription","sequenceDNA","View"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BO,KAD4B,GACpB;AACJC,MAAAA,IAAI,EAAE,QADF;AAEJC,MAAAA,WAAW,EAAE,OAFT;AAGJC,MAAAA,aAAa,EAAE;AACXC,QAAAA,IAAI,EAAE,MADK;AAEXC,QAAAA,WAAW,EAAE;AAFF,OAHX;AAOJC,MAAAA,KAAK,EAAE;AAPH,KADoB;AAAA;;AAU5BC,EAAAA,MAAM,GAAE;AACJ,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAG,KAAKC,KAAL,CAAWb,GAAX,CAAec,MAAf,GAAwB,CAA3B,EAA6B;AACzBF,MAAAA,OAAO,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACU,KAAKR,KAAL,CAAWC,IADrB,kBAEiB,KAAKD,KAAL,CAAWE,WAF5B,oBAGmB,KAAKF,KAAL,CAAWG,aAH9B,YAIW,KAAKH,KAAL,CAAWM,KAJtB,cAKcK,KAAD,IAAW,KAAKC,mBAAL,CAAyBD,KAAzB,CALxB,CAHJ,EAUK,KAAKF,KAAL,CAAWb,GAAX,CAAeiB,GAAf,CAAmBC,GAAG,IAAI;AACvB,eAAO,oBAAC,GAAD;AACK,UAAA,IAAI,EAAEA,GAAG,CAACC,YADf;AAEK,UAAA,WAAW,EAAED,GAAG,CAACE,mBAFtB;AAGK,UAAA,QAAQ,EAAEF,GAAG,CAACG,WAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,OANA,CAVL,CADJ;AAoBH,KArBD,MAqBK;AACDT,MAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAV;AACH;;AAED,WACI;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACqB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,OADL,CADJ;AAKH;;AA1C2B;;AA6ChC,eAAeT,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport Modal from '../../../Components/Modal/Modal';\nimport Button from '../../../Components/Button/Button';\nimport DNA from '../../../Components/DNA/DNA';\nimport classes from './ViewDNA.module.css';\nimport Input from '../../../Components/Input/Input';\n\nclass ViewDNA extends Component {\n    state = {\n        name: 'Search',\n        elementType: 'input',\n        elementConfig: {\n            type: 'text',\n            placeholder: 'Sequence Name'\n        },\n        value: '',\n    }\n    render(){\n        let listDNA = null;\n        if(this.props.DNA.length > 0){\n            listDNA = (\n                <div>\n                    \n                    <Button btnType={'Sort'}>Sort</Button>\n                    <input>\n                        name={this.state.name}\n                        elementType={this.state.elementType}\n                        elementConfig={this.state.elementConfig}\n                        value={this.state.value}\n                        Changed={(event) => this.inputChangedHandler(event)}\n                    </input>\n                    {this.props.DNA.map(dna => {\n                        return <DNA \n                                    name={dna.sequenceName} \n                                    description={dna.sequenceDescription} \n                                    sequence={dna.sequenceDNA}\n                                />\n                    })}\n                </div>\n            );\n        }else{\n            listDNA = <h2>No DNA samples have been added.</h2>\n        }\n\n        return(\n            <div className={classes.View}>\n                {listDNA}\n            </div>\n        );\n    }\n}\n\nexport default ViewDNA;"]},"metadata":{},"sourceType":"module"}